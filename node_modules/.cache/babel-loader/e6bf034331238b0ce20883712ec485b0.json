{"ast":null,"code":"import { deepForEach } from './childrenDeepMap';\nimport { isTab, isTabList, isTabPanel } from './elementTypes';\nexport function childrenPropType(props, propName, componentName) {\n  let error;\n  let tabsCount = 0;\n  let panelsCount = 0;\n  let tabListFound = false;\n  const listTabs = [];\n  const children = props[propName];\n  deepForEach(children, child => {\n    if (isTabList(child)) {\n      if (child.props && child.props.children && typeof child.props.children === 'object') {\n        deepForEach(child.props.children, listChild => listTabs.push(listChild));\n      }\n\n      if (tabListFound) {\n        error = new Error(\"Found multiple 'TabList' components inside 'Tabs'. Only one is allowed.\");\n      }\n\n      tabListFound = true;\n    }\n\n    if (isTab(child)) {\n      if (!tabListFound || listTabs.indexOf(child) === -1) {\n        error = new Error(\"Found a 'Tab' component outside of the 'TabList' component. 'Tab' components \" + \"have to be inside the 'TabList' component.\");\n      }\n\n      tabsCount++;\n    } else if (isTabPanel(child)) {\n      panelsCount++;\n    }\n  });\n\n  if (!error && tabsCount !== panelsCount) {\n    error = new Error(`There should be an equal number of 'Tab' and 'TabPanel' in \\`${componentName}\\`. ` + `Received ${tabsCount} 'Tab' and ${panelsCount} 'TabPanel'.`);\n  }\n\n  return error;\n}\nexport function onSelectPropType(props, propName, componentName, location, propFullName) {\n  const prop = props[propName];\n  const name = propFullName || propName;\n  let error = null;\n\n  if (prop && typeof prop !== 'function') {\n    error = new Error(`Invalid ${location} \\`${name}\\` of type \\`${typeof prop}\\` supplied ` + `to \\`${componentName}\\`, expected \\`function\\`.`);\n  } else if (props.selectedIndex != null && prop == null) {\n    error = new Error(`The ${location} \\`${name}\\` is marked as required in \\`${componentName}\\`, but ` + `its value is \\`undefined\\` or \\`null\\`.\\n` + `\\`onSelect\\` is required when \\`selectedIndex\\` is also set. Not doing so will ` + `make the tabs not do anything, as \\`selectedIndex\\` indicates that you want to ` + `handle the selected tab yourself.\\n` + `If you only want to set the inital tab replace \\`selectedIndex\\` with \\`defaultIndex\\`.`);\n  }\n\n  return error;\n}\nexport function selectedIndexPropType(props, propName, componentName, location, propFullName) {\n  const prop = props[propName];\n  const name = propFullName || propName;\n  let error = null;\n\n  if (prop != null && typeof prop !== 'number') {\n    error = new Error(`Invalid ${location} \\`${name}\\` of type \\`${typeof prop}\\` supplied to ` + `\\`${componentName}\\`, expected \\`number\\`.`);\n  } else if (props.defaultIndex != null && prop != null) {\n    return new Error(`The ${location} \\`${name}\\` cannot be used together with \\`defaultIndex\\` ` + `in \\`${componentName}\\`.\\n` + `Either remove \\`${name}\\` to let \\`${componentName}\\` handle the selected ` + `tab internally or remove \\`defaultIndex\\` to handle it yourself.`);\n  }\n\n  return error;\n}","map":{"version":3,"sources":["/Users/riteshgupta/Desktop/sjeiwebsite/src/components/helpers/propTypes.js"],"names":["deepForEach","isTab","isTabList","isTabPanel","childrenPropType","props","propName","componentName","error","tabsCount","panelsCount","tabListFound","listTabs","children","child","listChild","push","Error","indexOf","onSelectPropType","location","propFullName","prop","name","selectedIndex","selectedIndexPropType","defaultIndex"],"mappings":"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","sourcesContent":["import { deepForEach } from './childrenDeepMap';\nimport { isTab, isTabList, isTabPanel } from './elementTypes';\n\nexport function childrenPropType(props, propName, componentName) {\n  let error;\n  let tabsCount = 0;\n  let panelsCount = 0;\n  let tabListFound = false;\n  const listTabs = [];\n  const children = props[propName];\n\n  deepForEach(children, (child) => {\n    if (isTabList(child)) {\n      if (\n        child.props &&\n        child.props.children &&\n        typeof child.props.children === 'object'\n      ) {\n        deepForEach(child.props.children, (listChild) =>\n          listTabs.push(listChild),\n        );\n      }\n\n      if (tabListFound) {\n        error = new Error(\n          \"Found multiple 'TabList' components inside 'Tabs'. Only one is allowed.\",\n        );\n      }\n      tabListFound = true;\n    }\n    if (isTab(child)) {\n      if (!tabListFound || listTabs.indexOf(child) === -1) {\n        error = new Error(\n          \"Found a 'Tab' component outside of the 'TabList' component. 'Tab' components \" +\n            \"have to be inside the 'TabList' component.\",\n        );\n      }\n      tabsCount++;\n    } else if (isTabPanel(child)) {\n      panelsCount++;\n    }\n  });\n\n  if (!error && tabsCount !== panelsCount) {\n    error = new Error(\n      `There should be an equal number of 'Tab' and 'TabPanel' in \\`${componentName}\\`. ` +\n        `Received ${tabsCount} 'Tab' and ${panelsCount} 'TabPanel'.`,\n    );\n  }\n\n  return error;\n}\n\nexport function onSelectPropType(\n  props,\n  propName,\n  componentName,\n  location,\n  propFullName,\n) {\n  const prop = props[propName];\n  const name = propFullName || propName;\n  let error = null;\n\n  if (prop && typeof prop !== 'function') {\n    error = new Error(\n      `Invalid ${location} \\`${name}\\` of type \\`${typeof prop}\\` supplied ` +\n        `to \\`${componentName}\\`, expected \\`function\\`.`,\n    );\n  } else if (props.selectedIndex != null && prop == null) {\n    error = new Error(\n      `The ${location} \\`${name}\\` is marked as required in \\`${componentName}\\`, but ` +\n        `its value is \\`undefined\\` or \\`null\\`.\\n` +\n        `\\`onSelect\\` is required when \\`selectedIndex\\` is also set. Not doing so will ` +\n        `make the tabs not do anything, as \\`selectedIndex\\` indicates that you want to ` +\n        `handle the selected tab yourself.\\n` +\n        `If you only want to set the inital tab replace \\`selectedIndex\\` with \\`defaultIndex\\`.`,\n    );\n  }\n\n  return error;\n}\n\nexport function selectedIndexPropType(\n  props,\n  propName,\n  componentName,\n  location,\n  propFullName,\n) {\n  const prop = props[propName];\n  const name = propFullName || propName;\n  let error = null;\n\n  if (prop != null && typeof prop !== 'number') {\n    error = new Error(\n      `Invalid ${location} \\`${name}\\` of type \\`${typeof prop}\\` supplied to ` +\n        `\\`${componentName}\\`, expected \\`number\\`.`,\n    );\n  } else if (props.defaultIndex != null && prop != null) {\n    return new Error(\n      `The ${location} \\`${name}\\` cannot be used together with \\`defaultIndex\\` ` +\n        `in \\`${componentName}\\`.\\n` +\n        `Either remove \\`${name}\\` to let \\`${componentName}\\` handle the selected ` +\n        `tab internally or remove \\`defaultIndex\\` to handle it yourself.`,\n    );\n  }\n\n  return error;\n}\n"]},"metadata":{},"sourceType":"module"}