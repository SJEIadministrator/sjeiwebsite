{"ast":null,"code":"import { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from './elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, child => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return cloneElement(child, { ...child.props,\n        children: deepMap(child.props.children, callback)\n      });\n    }\n\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, child => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/riteshgupta/Desktop/sjeiwebsite/src/components/helpers/childrenDeepMap.js"],"names":["Children","cloneElement","isTabPanel","isTab","isTabList","isTabChild","child","deepMap","children","callback","map","props","deepForEach","forEach"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAuC,OAAvC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,SAA5B,QAA6C,gBAA7C;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SAAOH,KAAK,CAACG,KAAD,CAAL,IAAgBF,SAAS,CAACE,KAAD,CAAzB,IAAoCJ,UAAU,CAACI,KAAD,CAArD;AACD;;AAED,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;AAC1C,SAAOT,QAAQ,CAACU,GAAT,CAAaF,QAAb,EAAwBF,KAAD,IAAW;AACvC;AACA;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB,OAAO,IAAP;;AAEpB,QAAID,UAAU,CAACC,KAAD,CAAd,EAAuB;AACrB,aAAOG,QAAQ,CAACH,KAAD,CAAf;AACD;;AAED,QACEA,KAAK,CAACK,KAAN,IACAL,KAAK,CAACK,KAAN,CAAYH,QADZ,IAEA,OAAOF,KAAK,CAACK,KAAN,CAAYH,QAAnB,KAAgC,QAHlC,EAIE;AACA;AACA,aAAOP,YAAY,CAACK,KAAD,EAAQ,EACzB,GAAGA,KAAK,CAACK,KADgB;AAEzBH,QAAAA,QAAQ,EAAED,OAAO,CAACD,KAAK,CAACK,KAAN,CAAYH,QAAb,EAAuBC,QAAvB;AAFQ,OAAR,CAAnB;AAID;;AAED,WAAOH,KAAP;AACD,GAtBM,CAAP;AAuBD;AAED,OAAO,SAASM,WAAT,CAAqBJ,QAArB,EAA+BC,QAA/B,EAAyC;AAC9C,SAAOT,QAAQ,CAACa,OAAT,CAAiBL,QAAjB,EAA4BF,KAAD,IAAW;AAC3C;AACA;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;;AAEpB,QAAIH,KAAK,CAACG,KAAD,CAAL,IAAgBJ,UAAU,CAACI,KAAD,CAA9B,EAAuC;AACrCG,MAAAA,QAAQ,CAACH,KAAD,CAAR;AACD,KAFD,MAEO,IACLA,KAAK,CAACK,KAAN,IACAL,KAAK,CAACK,KAAN,CAAYH,QADZ,IAEA,OAAOF,KAAK,CAACK,KAAN,CAAYH,QAAnB,KAAgC,QAH3B,EAIL;AACA,UAAIJ,SAAS,CAACE,KAAD,CAAb,EAAsBG,QAAQ,CAACH,KAAD,CAAR;AACtBM,MAAAA,WAAW,CAACN,KAAK,CAACK,KAAN,CAAYH,QAAb,EAAuBC,QAAvB,CAAX;AACD;AACF,GAfM,CAAP;AAgBD","sourcesContent":["import { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from './elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, (child) => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (\n      child.props &&\n      child.props.children &&\n      typeof child.props.children === 'object'\n    ) {\n      // Clone the child that has children and map them too\n      return cloneElement(child, {\n        ...child.props,\n        children: deepMap(child.props.children, callback),\n      });\n    }\n\n    return child;\n  });\n}\n\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, (child) => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (\n      child.props &&\n      child.props.children &&\n      typeof child.props.children === 'object'\n    ) {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}